<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (C) 2014 Parrot SA

	Redistribution and use in source and binary forms, with or without
	modification, are permitted provided that the following conditions
	are met:
	* Redistributions of source code must retain the above copyright
	notice, this list of conditions and the following disclaimer.
	* Redistributions in binary form must reproduce the above copyright
	notice, this list of conditions and the following disclaimer in
	the documentation and/or other materials provided with the
	distribution.
	* Neither the name of Parrot nor the names
	of its contributors may be used to endorse or promote products
	derived from this software without specific prior written
	permission.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
	"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
	FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
	COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
	OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
	AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
	OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
	SUCH DAMAGE.
-->
<feature id="136" name="rc">
	All commands/events related to Calibration and Mapping of RadioCommands
	<enums>
		<enum name="receiver_state">
			RC Receiver state.
			<value name="connected">
				RC drone receiver connected to a RC.
			</value>
			<value name="disconnected">
				RC drone receiver not connected to a RC.
			</value>
		</enum>
		<enum name="channel_action">
			Channel action.
			<value name="invalid">
				Invalid/Unused channel.
			</value>
			<value name="roll">
				Roll axis channel.
			</value>
			<value name="pitch">
				Pitch axis channel.
			</value>
			<value name="yaw">
				Yaw axis channel.
			</value>
			<value name="gaz">
				Gaz / Throttle / Altitude axis channel.
			</value>
			<value name="takeoff_land">
				Takeoff / Land channel.
			</value>
			<value name="emergency">
				Emergency channel.
			</value>
			<value name="return_home">
				Return Home channel.
			</value>
			<value name="piloting_mode">
				RC Piloting mode.
				Auto mode: used for doing flightplans and for assisted flying
				with a non-RC controller.
				Easy manual mode: used for assisted flying with a RC controller.
				Manual mode: used for non-assisted flying with a RC controller and
				for directly controlling the servomotors.
			</value>
			<value name="take_control">
				RC take control.
				When take control is activated the RC controller, if
				available, becomes the main controller.
			</value>
		</enum>
		<enum name="calibration_type">
			Calibration type.
			<value name="none">
				No calibration.
			</value>
			<value name="neutral">
				All neutral channels calibration.
			</value>
			<value name="min_max">
				Min/Max specific channel calibration.
			</value>
		</enum>
		<enum name="channel_type">
			Channel physical type.
			<value name="invalid">
				Invalid channel physical type.
			</value>
			<value name="signed_axis">
				Signed axis type.
			</value>
			<value name="unsigned_axis">
				Unsigned axis type.
			</value>
			<value name="monostable_button">
				Monostable button type.
			</value>
			<value name="bistable_button">
				Bistable button type.
			</value>
			<value name="tristate_button">
				Tristate button type.
			</value>
			<value name="rotary_button">
				Rotary button type.
			</value>
		</enum>
	</enums>
	<msgs>
		<evt name="receiver_state" id="1">
			<comment
			title="State of drone RC receiver"
			desc="State of drone RC receiver"/>
			<arg name="state" type="enum:receiver_state">
				current state.
			</arg>
			<arg name="protocol" type="string">
				Protocol used by RC.
			</arg>
			<arg name="enabled" type="u8">
				1 if enabled, 0 otherwise.
				If enabled, drone will apply values sent by RC receiver.
			</arg>
		</evt>
		<cmd name="monitor_channels" id="2">
			<comment
			title="Monitor RC channels"
			desc="Enable or Disable RC channels monitoring. \n
			If enable, drone will send periodically rc channel value \n
			events."/>
			<arg name="enable" type="u8">
				1 for enable / 0 to disable
			</arg>
		</cmd>
		<evt name="channels_monitor_state" id="3">
			<comment
			title="RC channels monitor state"
			desc="RC Channel monitor state sent by drone"/>
			<arg name="state" type="u8">
				1 if enabled, 0 if disabled
			</arg>
		</evt>
		<evt name="channel_value" id="4" type="MAP_ITEM:id">
			<comment
				title="RC channels value"
				desc="RC Channel value sent by drone"/>
			<arg name="id" type="u8">
				RC channel id.
			</arg>
			<arg name="action" type="enum:channel_action">
				RC channel action.
			</arg>
			<arg name="value" type="i16">
				RC channel value.
			</arg>
			<arg name="list_flags" type="bitfield:u8:list_flags">
				Item attribute Bitfield.
				First: indicate it's the first element of the list.
				Last: indicate it's the last element of the list.
			</arg>
		</evt>
		<evt name="calibration_state" id="5">
			<comment
			title="Channels calibration state"
			desc="RC Channels calibration state sent by drone."/>
			<arg name="calibration_type" type="enum:calibration_type">
				Current calibration type
				set to 'none' if no calibration in progress.
			</arg>
			<arg name="channel_action" type="enum:channel_action">
				Current channel action calibration
				Only used when calibration_type=min_max.
			</arg>
			<arg name="required" type="bitfield:u32:channel_action">
				bitfield of required channel actions.
				Neutral channels calibration is always required.
			</arg>
			<arg name="calibrated" type="bitfield:u32:channel_action">
				bitfield of calibrated channel actions.
			</arg>
			<arg name="neutral_calibrated" type="u8">
				1 if neutral channels are calibrated, 0 otherwise.
			</arg>
		</evt>
		<cmd name="start_calibration" id="6">
			<comment
			title="Start a calibration"
			desc="Start a calibration."/>
			<arg name="calibration_type" type="enum:calibration_type">
				Type of calibration.
			</arg>
			<arg name="channel_action" type="enum:channel_action">
				Channel action.
				only used when calibration_type=min_max.
			</arg>
			<arg name="channel_type" type="enum:channel_type">
				Channel type.
				only used when calibration_type=min_max.
			</arg>
		</cmd>
		<evt name="receiver_quality" id="7">
			<comment
			title="RC signal quality level"
			desc="RC signal quality level"/>
			<arg name="level" type="u8">
				Current RC signal quality level between 0 to 5.
			</arg>
		</evt>
		<cmd name="invert_channel" id="8">
			<comment
			title="Invert a RC channel values"
			desc="Invert a RC channel values"/>
			<arg name="action" type="enum:channel_action">
				Channel action.
			</arg>
			<arg name="flag" type="u8">
				1 to invert channel 0 to restore channel.
			</arg>
		</cmd>
		<cmd name="abort_calibration" id="9">
			<comment
			title="Abort current calibration"
			desc="Abort current calibration."/>
		</cmd>
		<cmd name="reset_calibration" id="10">
			<comment
			title="Reset calibration to default values"
			desc="Reset calibration to default values."/>
		</cmd>
		<cmd name="enable_receiver" id="11">
			<comment
			title="Enable RC receiver"
			desc="Enable or disable RC receiver. \n
			If enable, drone will apply values sent by RC receiver."/>
			<arg name="enable" type="u8">
				1 for enable / 0 to disable
			</arg>
		</cmd>
		<evt name="channel_action_item" id="12" type="MAP_ITEM:action">
			<comment
			title="Channel action item"
			desc="Channel action supported by drone."/>
			<arg name="action" type="enum:channel_action">
				Channel action.
			</arg>
			<arg name="supported_type" type="bitfield:u32:channel_type">
				Bitfield of supported channel types.
			</arg>
			<arg name="calibrated_type" type="enum:channel_type">
				Calibrated action channel type (none if not calibrated).
			</arg>
			<arg name="inverted" type="u8">
				1 if inverted, 0 otherwise.
			</arg>
		</evt>
	</msgs>
</feature>
